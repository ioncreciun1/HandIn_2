@page "/AdultList"
@using HandIn_2.Data
@using HandIn_2.Models
@inject IAdultService AdultService
<div class="filter">

    <div class="Search">
        <p>FirstName:</p>
        <input type="text" @bind="@firstName"/>
        <p>LastName:</p>
        <input type="text" @bind="@lastName"/>
    </div>
        <div>
            <p>JobTitle:</p>
            <input type="text" @bind="@jobTitle"/>
            <p>Sex:</p>
            <select @bind="@Sex">
                <option></option>
                <option>M</option>
                <option>F</option>
            </select>
        </div>
    <div>
        <p>HairColor:</p>
        <input type="text" @bind="@hairColor"/>
        <p>EyeColor:</p>
        <input type="text" @bind="@eyecolor"/>
    </div>
    <div>
        <p>Age:</p>
        <input type="number" @bind="@age"/>
        <p>AdultID:</p>
        <input type="number" @bind="@adultID"/>
    </div>
    <button class="SubmitButton" @onclick="@SearchByParam">Search</button>
</div>



<table class="table">
    <thead>
    <tr>
        <th>Id</th>
        <th>Name</th>
        <th>Job Title</th>
        <th>Age</th>
        <th>Weight</th>
        <th>Height</th>
        <th>Hair Color</th>
        <th>Eye Color</th>
        <th>Sex</th>
        <th>Remove</th>
    </tr>
    </thead>
    <tbody>
    @if (AdultstoShow == null)
    {
        <p>
            <em>Loading...</em>
        </p>
    }
    else if (!AdultstoShow.Any())
    {
        <p>
            <em>There is no Adults.</em>
        </p>
    }
    else
    {
        @foreach (var adult in AdultstoShow)
        {
            <tr>
                <td>@adult.Id</td>
                <td>@adult.FirstName @adult.LastName</td>
                <td>@adult.JobTitle</td>
                <td>@adult.Age</td>
                <td>@adult.Weight</td>
                <td>@adult.Height</td>
                <td>@adult.HairColor</td>
                <td>@adult.EyeColor</td>
                <td>@adult.Sex</td>
                <td>
                    <button @onclick="@(() => RemoveAdult(@adult.Id))">
                        <i class="oi oi-trash" style="color:red"/>
                    </button>
                </td>
            </tr>
        }
    }
    </tbody>
</table>

@code
{
    private string firstName;
    private string lastName;
    private string jobTitle;
    private string hairColor;
    private string eyecolor;
    private int? age;
    private int? adultID;
    private string Sex;
    private List<Adult> Adults;
    private IList<Adult> AdultstoShow;
    
    protected override async Task OnInitializedAsync()
    {
        Adults = await AdultService.getAdultsAsync(firstName,lastName,jobTitle,hairColor,eyecolor,Sex,age,adultID);
        AdultstoShow = Adults;
    }
    

    private void RemoveAdult(int adultId)
    {
        Adult adultToRemove = Adults.First(a => a.Id == adultId);
        AdultService.RemoveAdultAsync(adultId);
        Adults.Remove(adultToRemove);
    }

    private async Task SearchByParam()
    {
        Adults = await AdultService.getAdultsAsync(firstName,lastName,jobTitle,hairColor,eyecolor,Sex,age,adultID);
        AdultstoShow = Adults;
    }
}